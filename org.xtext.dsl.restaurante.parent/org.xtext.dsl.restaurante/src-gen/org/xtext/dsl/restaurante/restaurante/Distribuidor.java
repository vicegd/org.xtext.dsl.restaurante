/**
 * generated by Xtext 2.12.0
 */
package org.xtext.dsl.restaurante.restaurante;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Distribuidor</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.dsl.restaurante.restaurante.RestaurantePackage#getDistribuidor()
 * @model
 * @generated
 */
public enum Distribuidor implements Enumerator
{
  /**
   * The '<em><b>COCA COLA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COCA_COLA_VALUE
   * @generated
   * @ordered
   */
  COCA_COLA(0, "COCA_COLA", "COCA_COLA"),

  /**
   * The '<em><b>AQUABONA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #AQUABONA_VALUE
   * @generated
   * @ordered
   */
  AQUABONA(1, "AQUABONA", "AQUABONA"),

  /**
   * The '<em><b>MAHOU</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MAHOU_VALUE
   * @generated
   * @ordered
   */
  MAHOU(2, "MAHOU", "MAHOU"),

  /**
   * The '<em><b>ALVALLE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ALVALLE_VALUE
   * @generated
   * @ordered
   */
  ALVALLE(3, "ALVALLE", "ALVALLE"),

  /**
   * The '<em><b>TROPICANA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TROPICANA_VALUE
   * @generated
   * @ordered
   */
  TROPICANA(4, "TROPICANA", "TROPICANA"),

  /**
   * The '<em><b>OREO</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #OREO_VALUE
   * @generated
   * @ordered
   */
  OREO(5, "OREO", "OREO"),

  /**
   * The '<em><b>MILKA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MILKA_VALUE
   * @generated
   * @ordered
   */
  MILKA(6, "MILKA", "MILKA"),

  /**
   * The '<em><b>DANONE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DANONE_VALUE
   * @generated
   * @ordered
   */
  DANONE(7, "DANONE", "DANONE");

  /**
   * The '<em><b>COCA COLA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>COCA COLA</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #COCA_COLA
   * @model
   * @generated
   * @ordered
   */
  public static final int COCA_COLA_VALUE = 0;

  /**
   * The '<em><b>AQUABONA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>AQUABONA</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #AQUABONA
   * @model
   * @generated
   * @ordered
   */
  public static final int AQUABONA_VALUE = 1;

  /**
   * The '<em><b>MAHOU</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MAHOU</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MAHOU
   * @model
   * @generated
   * @ordered
   */
  public static final int MAHOU_VALUE = 2;

  /**
   * The '<em><b>ALVALLE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>ALVALLE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #ALVALLE
   * @model
   * @generated
   * @ordered
   */
  public static final int ALVALLE_VALUE = 3;

  /**
   * The '<em><b>TROPICANA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>TROPICANA</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #TROPICANA
   * @model
   * @generated
   * @ordered
   */
  public static final int TROPICANA_VALUE = 4;

  /**
   * The '<em><b>OREO</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>OREO</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #OREO
   * @model
   * @generated
   * @ordered
   */
  public static final int OREO_VALUE = 5;

  /**
   * The '<em><b>MILKA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MILKA</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MILKA
   * @model
   * @generated
   * @ordered
   */
  public static final int MILKA_VALUE = 6;

  /**
   * The '<em><b>DANONE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>DANONE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #DANONE
   * @model
   * @generated
   * @ordered
   */
  public static final int DANONE_VALUE = 7;

  /**
   * An array of all the '<em><b>Distribuidor</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final Distribuidor[] VALUES_ARRAY =
    new Distribuidor[]
    {
      COCA_COLA,
      AQUABONA,
      MAHOU,
      ALVALLE,
      TROPICANA,
      OREO,
      MILKA,
      DANONE,
    };

  /**
   * A public read-only list of all the '<em><b>Distribuidor</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<Distribuidor> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Distribuidor</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Distribuidor get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Distribuidor result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Distribuidor</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Distribuidor getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Distribuidor result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Distribuidor</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Distribuidor get(int value)
  {
    switch (value)
    {
      case COCA_COLA_VALUE: return COCA_COLA;
      case AQUABONA_VALUE: return AQUABONA;
      case MAHOU_VALUE: return MAHOU;
      case ALVALLE_VALUE: return ALVALLE;
      case TROPICANA_VALUE: return TROPICANA;
      case OREO_VALUE: return OREO;
      case MILKA_VALUE: return MILKA;
      case DANONE_VALUE: return DANONE;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private Distribuidor(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //Distribuidor
